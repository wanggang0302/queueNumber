<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jfsoft.mapper.SysUserMapper" >

	<resultMap id="BaseResultMap" type="com.jfsoft.model.SysUser" >
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="code" property="code" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="ownedqueue" property="ownedqueue" jdbcType="INTEGER" />
		<result column="isuse" property="isuse" jdbcType="CHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="createrId" property="createrid" jdbcType="INTEGER" />
		<result column="memo" property="memo" jdbcType="NVARCHAR" />
	</resultMap>

	<sql id="Base_Column_List" >
		id, code, name, username, password, ownedqueue, isuse, createtime, createrId, memo
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select 
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
		delete from sys_user
		where id = #{id,jdbcType=CHAR}
	</delete>

	<insert id="insert" parameterType="com.jfsoft.model.SysUser" >
		insert into sys_user (id, code, name, 
			username, password, ownedqueue, 
			isuse, createtime, createrId, 
			memo)
		values (#{id,jdbcType=CHAR}, #{code,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
			#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{ownedqueue,jdbcType=INTEGER}, 
			#{isuse,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, #{createrid,jdbcType=INTEGER},
			#{memo,jdbcType=NVARCHAR})
	</insert>

    <!-- 保存用户信息 -->
	<insert id="insertSelective" parameterType="com.jfsoft.model.SysUser" >
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if>
			<if test="code != null" >
				code,
			</if>
			<if test="name != null" >
				name,
			</if>
			<if test="username != null" >
				username,
			</if>
			<if test="password != null" >
				password,
			</if>
			<if test="ownedqueue != null" >
				ownedqueue,
			</if>
			<if test="isuse != null" >
				isuse,
			</if>
			<if test="createtime != null" >
				createtime,
			</if>
			<if test="createrid != null" >
				createrId,
			</if>
			<if test="memo != null" >
				memo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=CHAR},
			</if>
			<if test="code != null" >
				#{code,jdbcType=INTEGER},
			</if>
			<if test="name != null" >
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null" >
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="ownedqueue != null" >
				#{ownedqueue,jdbcType=INTEGER},
			</if>
			<if test="isuse != null" >
				#{isuse,jdbcType=CHAR},
			</if>
			<if test="createtime != null" >
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="createrid != null" >
				#{createrid,jdbcType=INTEGER},
			</if>
			<if test="memo != null" >
				#{memo,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.jfsoft.model.SysUser" >
		update sys_user
		<set >
			<if test="code != null" >
				code = #{code,jdbcType=INTEGER},
			</if>
			<if test="name != null" >
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null" >
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="ownedqueue != null" >
				ownedqueue = #{ownedqueue,jdbcType=INTEGER},
			</if>
			<if test="isuse != null" >
				isuse = #{isuse,jdbcType=CHAR},
			</if>
			<if test="createtime != null" >
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="createrid != null" >
				createrId = #{createrid,jdbcType=INTEGER},
			</if>
			<if test="memo != null" >
				memo = #{memo,jdbcType=NVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.jfsoft.model.SysUser" >
		update sys_user
		set code = #{code,jdbcType=INTEGER},
			name = #{name,jdbcType=VARCHAR},
			username = #{username,jdbcType=VARCHAR},
			password = #{password,jdbcType=VARCHAR},
			ownedqueue = #{ownedqueue,jdbcType=INTEGER},
			isuse = #{isuse,jdbcType=CHAR},
			createtime = #{createtime,jdbcType=TIMESTAMP},
			createrId = #{createrid,jdbcType=INTEGER},
			memo = #{memo,jdbcType=NVARCHAR}
		where id = #{id,jdbcType=CHAR}
	</update>

    <!-- 分页查询用户列表 -->
    <select id="findPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
            su.id,su.code,su.name,su.username,su.ownedqueue,sq.name as ownedQueueName
        from
            sys_user su
        left join sys_queue sq on su.ownedqueue=sq.code
        where
            su.id in
            (
                SELECT top #{pageSize} sut.id FROM
                (
                    SELECT top #{pageStart} sus.id, sus.createtime FROM sys_user sus ORDER BY sus.createtime desc
                ) sut ORDER BY sut.createtime desc
            )
            <if test="name != null" >
                and su.name like '%'+ #{name,jdbcType=VARCHAR}+'%'
            </if>
            <if test="username != null" >
                and su.username like '%'+ #{username,jdbcType=VARCHAR}+'%'
            </if>
            <if test="ownedqueue != null" >
                and su.ownedqueue = #{ownedqueue,jdbcType=INTEGER}
            </if>
        ORDER BY
            su.createtime desc
    </select>
    <select id="findPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(su.id)
        from
            sys_user su
        left join sys_queue sq on su.ownedqueue=sq.code
        <where>
            <if test="name != null" >
                and su.name like '%'+ #{name,jdbcType=VARCHAR}+'%'
            </if>
            <if test="username != null" >
                and su.username like '%'+ #{username,jdbcType=VARCHAR}+'%'
            </if>
            <if test="ownedqueue != null" >
                and su.ownedqueue = #{ownedqueue,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <!-- 查询最大code -->
    <select id="getMaxCode" resultType="java.lang.Integer">
        select MAX(code) from sys_user
    </select>

    <!-- 根据登录账号查询用户信息 -->
    <select id="findByUsername" parameterType="java.lang.String" resultMap="BaseUserMap">
        select
            su.id,su.code,su.name,su.username,su.password,su.ownedqueue
        from
            sys_user su
        left join sys_userrole ur on ur.usercode=su.code
        where
            su.username=#{username} and su.isuse='1'
    </select>

	<!-- 查询结果 -->
	<resultMap id="BaseUserMap" type="com.jfsoft.model.SysUser">
		<id column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="name" property="name"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="ownedqueue" property="ownedqueue"/>
		<collection property="roleList" ofType="com.jfsoft.model.SysRole"
                select="queryRole" column="{userCode=code}">
		</collection>
	</resultMap>

    <!-- 查询用户角色信息 -->
    <select id="queryRole" parameterType="java.util.Map" resultType="com.jfsoft.model.SysRole" resultMap="BaseRoleMap">
        SELECT
            sr.code,sr.name
        FROM
            sys_role sr
        LEFT JOIN sys_userrole ur on ur.rolecode=sr.code
        WHERE
            ur.usercode=#{userCode} and sr.isuse='1'
    </select>
    <resultMap id="BaseRoleMap" type="com.jfsoft.model.SysRole">
        <result column="code" property="code" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <collection property="permissionList" ofType="com.jfsoft.model.SysMenu"
                    select="queryMenu" column="{roleCode=code}">
        </collection>
    </resultMap>

    <!-- 根据角色查询菜单权限 -->
    <select id="queryMenu" parameterType="java.util.Map" resultType="com.jfsoft.model.SysMenu" resultMap="BaseMenuMap">
        select
            sm.code,sm.name,sm.parent_code,sm.url,rm.permission
        FROM
            sys_menu sm
        LEFT JOIN sys_rolemenu rm on rm.menuCode=sm.code
        WHERE
            rm.roleCode=#{roleCode} and sm.isuse='1'
        ORDER BY
        	sm.sortnum
    </select>
    <resultMap id="BaseMenuMap" type="com.jfsoft.model.SysMenu" >
        <result column="code" property="code" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="parent_code" property="parentCode" jdbcType="INTEGER" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="permission" property="permission" jdbcType="NVARCHAR" />
    </resultMap>

</mapper>
