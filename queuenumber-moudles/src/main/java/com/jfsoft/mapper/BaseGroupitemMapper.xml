<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jfsoft.mapper.BaseGroupitemMapper" >
	<resultMap id="BaseResultMap" type="com.jfsoft.model.BaseGroupitem" >
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="code" property="code" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="NVARCHAR" />
		<result column="deptCode" property="deptcode" jdbcType="INTEGER" />
		<result column="deptName" property="deptname" jdbcType="NVARCHAR" />
		<result column="isUse" property="isuse" jdbcType="BIT" />
		<result column="syncTime" property="synctime" jdbcType="TIMESTAMP" />
		<result column="syncUserId" property="syncuserid" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List" >
		id, code, name, deptCode, deptName, isUse, syncTime, syncUserId
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select 
		<include refid="Base_Column_List" />
		from base_groupitem
		where id = #{id,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
		delete from base_groupitem
		where id = #{id,jdbcType=CHAR}
	</delete>

	<insert id="insert" parameterType="com.jfsoft.model.BaseGroupitem" >
		insert into base_groupitem (id, code, name, 
			deptCode, deptName, isUse, 
			syncTime, syncUserId)
		values (#{id,jdbcType=CHAR}, #{code,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, 
			#{deptcode,jdbcType=INTEGER}, #{deptname,jdbcType=NVARCHAR}, #{isuse,jdbcType=BIT}, 
			#{synctime,jdbcType=TIMESTAMP}, #{syncuserid,jdbcType=INTEGER})
	</insert>

	<insert id="insertSelective" parameterType="com.jfsoft.model.BaseGroupitem" >
		insert into base_groupitem
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if>
			<if test="code != null" >
				code,
			</if>
			<if test="name != null" >
				name,
			</if>
			<if test="deptcode != null" >
				deptCode,
			</if>
			<if test="deptname != null" >
				deptName,
			</if>
			<if test="isuse != null" >
				isUse,
			</if>
			<if test="synctime != null" >
				syncTime,
			</if>
			<if test="syncuserid != null" >
				syncUserId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=CHAR},
			</if>
			<if test="code != null" >
				#{code,jdbcType=INTEGER},
			</if>
			<if test="name != null" >
				#{name,jdbcType=NVARCHAR},
			</if>
			<if test="deptcode != null" >
				#{deptcode,jdbcType=INTEGER},
			</if>
			<if test="deptname != null" >
				#{deptname,jdbcType=NVARCHAR},
			</if>
			<if test="isuse != null" >
				#{isuse,jdbcType=BIT},
			</if>
			<if test="synctime != null" >
				#{synctime,jdbcType=TIMESTAMP},
			</if>
			<if test="syncuserid != null" >
				#{syncuserid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.jfsoft.model.BaseGroupitem" >
		update base_groupitem
		<set >
			<if test="code != null" >
				code = #{code,jdbcType=INTEGER},
			</if>
			<if test="name != null" >
				name = #{name,jdbcType=NVARCHAR},
			</if>
			<if test="deptcode != null" >
				deptCode = #{deptcode,jdbcType=INTEGER},
			</if>
			<if test="deptname != null" >
				deptName = #{deptname,jdbcType=NVARCHAR},
			</if>
			<if test="isuse != null" >
				isUse = #{isuse,jdbcType=BIT},
			</if>
			<if test="synctime != null" >
				syncTime = #{synctime,jdbcType=TIMESTAMP},
			</if>
			<if test="syncuserid != null" >
				syncUserId = #{syncuserid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.jfsoft.model.BaseGroupitem" >
		update base_groupitem
		set code = #{code,jdbcType=INTEGER},
			name = #{name,jdbcType=NVARCHAR},
			deptCode = #{deptcode,jdbcType=INTEGER},
			deptName = #{deptname,jdbcType=NVARCHAR},
			isUse = #{isuse,jdbcType=BIT},
			syncTime = #{synctime,jdbcType=TIMESTAMP},
			syncUserId = #{syncuserid,jdbcType=INTEGER}
		where id = #{id,jdbcType=CHAR}
	</update>

	<!-- 分页查询组合项目信息 -->
	<select id="findPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
			bg.id,bg.code,bg.name,bg.deptCode,bg.deptName,bg.isUse,bg.syncTime
		from
			base_groupitem bg
		WHERE bg.id in
			(
				SELECT top #{pageSize} bgt.id FROM
				(
					SELECT top #{pageStart} bgs.id, bgs.syncTime FROM base_groupitem bgs ORDER BY bgs.syncTime desc
				) bgt ORDER BY bgt.syncTime desc
			)
			<if test="name != null" >
				and bg.name like '%' + #{name,jdbcType=NVARCHAR} + '%'
			</if>
		ORDER BY bg.syncTime desc
	</select>
	<select id="findPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select
			count(*)
		from
			base_groupitem bg
		<where>
			<if test="name != null" >
				bg.name like '%' + #{name} + '%'
			</if>
		</where>
	</select>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into base_groupitem(code,name,deptCode,deptName,isUse,syncTime,syncUserId) values
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.code}, #{item.name}, #{item.deptCode}, #{item.deptName}, '1', getdate(), '1'
        </foreach>
    </insert>

</mapper>